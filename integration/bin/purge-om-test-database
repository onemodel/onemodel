#!/usr/bin/env bash
#(See file "../../core/bin/om" for discussion on the above line.)
set -eux

#    This file is part of OneModel, a program to manage knowledge.
#    Copyright in each year of 2016-2019 inclusive, 2020, and 2023, Luke A. Call; all rights reserved.
#    OneModel is free software, distributed under a license that includes honesty, the Golden Rule, guidelines around binary
#    distribution, and the GNU Affero General Public License as published by the Free Software Foundation;
#    see the file LICENSE for license version and details.
#    OneModel is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.
#    You should have received a copy of the GNU Affero General Public License along with OneModel.  If
#    not, see http://www.gnu.org/licenses/  .

# Called by script om-expect-tests, but kept separate so can also be conveniently
# called from the CLI.

# (Use "readlink -f" not ".. -e" so it will work also on openbsd.)
SCRIPT_DIR="$(dirname $(readlink -f $0))"

# Purge the test database (see core/testsuite/README for more about expect):
# (The line with "-d" added increases the debug output. The commands being called
# themselves also have ways to increase output: search for "diagnostics".)
#expect -d -c "set script_dir $SCRIPT_DIR" -f $SCRIPT_DIR/purge-om-test-database.exp
expect -c "set script_dir $SCRIPT_DIR" -f $SCRIPT_DIR/purge-om-test-database.exp
RESULT=$?

# Couldn't get here, due to "-e" switch to bash above and expect checks in the .exp file, if it were not successful so far:
echo "result: OM db purge success."
exit $RESULT
